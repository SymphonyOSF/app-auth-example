server:
  port: 9443
  ssl:
    # This is a self signed cert.  You will need to configure your browser or your system to trust it.  Or replace it
    # with a cert that has been signed by a trusted root.
    key-store: conf/tomcat.keystore
    key-store-password: changeit
    key-alias: tomcat

webhook:
  # API Key.  Must be provided as part of metadata when installing app on the pod.  Pod will provide this API key
  # back to this app when calling the webhook to update pod info.  Clearly, this should not be hardcoded in a
  # config
  api-key: super-secret-api-key-1234

symphony:
  client:

    # Keystore file that contains PKCS#12 / PFX format certificate used to authenticate this application to the
    # Symphony pod using client certificates.  Subject name in cert must equal app ID.  The cert must be trusted by the
    # Symphony pod, either by uploading the public part of the cert itself or the public signing cert for this cert.
    keystore-filename: ./conf/cert-app-auth-example.p12

    # keystore password
    keystore-password: changeit

    # This default value is the cacerts file distributed with the Java JDK which contains most common root certs
    truststore-filename: /Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home/jre/lib/security/cacerts

app:
  # ID of app.  Generated when app is installed on pod using AC Portal. Can be found by clicking on app name in the
  # App Management screen
  app-id: cert-app-auth-example

  # Host:port of this server.  Must be reachable from a browser.
  base-url: https://localhost:9443

# Populates the UserStore with list of users for this application
user-store:
  users:
    -
      username: "jsmith"
      display-name: "John Smith"
    -
      username: "tjones"
      display-name: "Tom Jones"
